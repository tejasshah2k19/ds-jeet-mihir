simple queue 




q = 0   1   2   3   4 
    60      30  40  50   
    r        f          

       insert -> queue is full  r==size-1      

       circular queue -> 

       static array -> array 

       list->

       30  40  50 60  
       f          r 


------------------------------------------------
linked list --> 

            10 => 1 2 3 4 5 6 
            15 => 1 2 3 4 5 6 7 8 9 10
            30 =>  

            add -> allocate 
            delete -> release 

            1 2 3 4 5 6 => 


            2000         5000         2500         4500         5500
            10|5000      20|2500      30|4500      40|5500      50|None 
            head             

            data -> node -> { data | next }
            
            1) head 
            2) node->next address None 


task:-> 
    insert beg 

    10  20  30  40  50 
    insertbeg 
    60
    60  10  20  30  40  50  

    deleteBeg 
    60  10  20  30  40  50  
    deleteBeg 
    10  20  30  40  50  
    





double linked list ->

    3 insert 
    3 delete 
    2 display  { forward and backward }
    sort the list in ascending order 

l1 ->

l2 -> 

l3 -> l1.head -> last -> next -> l2 


non linear ds --> 

    tree | Graph 


            MainServer 

    in                      Us 
K  M   D                 N  L   T






tree -> binary tree ->    node {child -> { 0 ,1 ,2 }} {max 2 child}
            1)BST  
            2)AVL 
            3)BTRee {multiple child-ll} 
            

            BST:- 1)binary tree {0,1,2}
                  2)parent node -> left small ,right big 


























